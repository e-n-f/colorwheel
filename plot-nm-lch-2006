set terminal postscript


g(x) = \
     a  * exp(- (x - u ) ** 2 / (2 * o  ** 2)) / (o  * sqrt(2 * pi)) + \
     a1 * exp(- (x - u1) ** 2 / (2 * o1 ** 2)) / (o1 * sqrt(2 * pi)) + \
     a2 * exp(- (x - u2) ** 2 / (2 * o2 ** 2)) / (o2 * sqrt(2 * pi)) + \
     a3 * exp(- (x - u3) ** 2 / (2 * o3 ** 2)) / (o3 * sqrt(2 * pi)) + \
     a4 * exp(- (x - u4) ** 2 / (2 * o4 ** 2)) / (o4 * sqrt(2 * pi)) + \
     a5 * exp(- (x - u5) ** 2 / (2 * o5 ** 2)) / (o5 * sqrt(2 * pi)) + \
     0

a               = 4.12617
u               = 638.483
o               = 7.09479
a1              = 8.98427
u1              = 439.612
o1              = 12.9283
a2              = 21.314 
u2              = 493.304
o2              = 14.5033
a3              = 4.24393
u3              = 586.235
o3              = 6.44049
a4              = 27.1204
u4              = 585.845
o4              = 24.0743
a5              = 98.4812
u5              = 472.367
o5              = 137.602

fit g(x) "jones-spectral-chroma" using 1:(1/$2) via a, u, o, a1, u1, o1, a2, u2, o2, a3, u3, o3, a4, u4, o4, a5, u5, o5
plot g(x), "jones-spectral-chroma" using 1:(1/$2)

fit g(x) "steindler-wavelength-discrimination" using 1:(1/$2) via a, u, o, a1, u1, o1, a2, u2, o2, a3, u3, o3, a4, u4, o4, a5, u5, o5
plot g(x), "steindler-wavelength-discrimination" using 1:(1/$2)


f(x) = a * ((.5 + .5 * erf((x - u) / (sqrt(2) * o)))) + a1 * ((.5 + .5 * erf((x - u1) / (sqrt(2) * o1)))) + a2 * ((.5 + .5 * erf((x - u2) / (sqrt(2) * o2)))) + b

a               = 2.0884    
u               = 495.496   
o               = 1.08203   
b               = -0.753913 
a1              = 1.03246   
u1              = 588.278   
o1              = 26.0332   
a2              = 1.15567   
u2              = 500.066   
o2              = 21.5208   

fit f(x) "koenig-angle" using 2:5 via a, u, o, b, a1, u1, o1, a2, u2, o2
plot f(x), "koenig-angle" using 2:5

set xrange [400:750]

set logscale y
plot \
     a  * exp(- (x - u ) ** 2 / (2 * o  ** 2)) / (o  * sqrt(2 * pi)) + \
     a1 * exp(- (x - u1) ** 2 / (2 * o1 ** 2)) / (o1 * sqrt(2 * pi)) + \
     a2 * exp(- (x - u2) ** 2 / (2 * o2 ** 2)) / (o2 * sqrt(2 * pi)) + \
     0
unset logscale y

unset xrange

f(x) = a * (1 - (.5 + .5 * erf((x - u) / (sqrt(2) * o)))) + a1 * (1 - (.5 + .5 * erf((x - u1) / (sqrt(2) * o1)))) + a2 * (1 - (.5 + .5 * erf((x - u2) / (sqrt(2) * o2)))) + b


a               = 1.51366   
u               = 574.457   
o               = 29.2535   
a1              = 1.7271    
u1              = 473.458   
o1              = 6.20547   
b               = 0.680437  
a2              = 1.68852   
u2              = 497.363   
o2              = 39.4372   

fit f(x) "nm-lch-2006" using 1:4 via a, u, o, a1, u1, o1, b, a2, u2, o2
plot "nm-lch-2006" using 1:4 with lines, f(x)

set xrange [411:694]
set logscale y
set yrange [.5:200]

# /8 since it looks like the best case for normal vision is ~1nm

g(x) = 1 / ( \
     a  * exp(- (x - u ) ** 2 / (2 * o  ** 2)) / (o  * sqrt(2 * pi)) + \
     a1 * exp(- (x - u1) ** 2 / (2 * o1 ** 2)) / (o1 * sqrt(2 * pi)) + \
     a2 * exp(- (x - u2) ** 2 / (2 * o2 ** 2)) / (o2 * sqrt(2 * pi)) ) / 8;

plot g(x)

ea = a
eu = u
eo = o
ea1 = a1
eu1 = u1
eo1 = o1
ea2 = a2
eu2 = u2
eo2 = o2

ea              = 0.672909      
eu              = 524.391       
eo              = 77.0208       
ea1             = 0.0996442     
eu1             = 479.451       
eo1             = 3.50504       
ea2             = 0.291203      
eu2             = 483.885       
eo2             = 20.9288       

eg(x) = 1 / ( \
     ea  * exp(- (x - eu ) ** 2 / (2 * eo  ** 2)) / (eo  * sqrt(2 * pi)) + \
     ea1 * exp(- (x - eu1) ** 2 / (2 * eo1 ** 2)) / (eo1 * sqrt(2 * pi)) + \
     ea2 * exp(- (x - eu2) ** 2 / (2 * eo2 ** 2)) / (eo2 * sqrt(2 * pi)) ) / 8;

fit 1/(eg(x)) "nm-log" using 1:(1/($4)) via ea, eu, eo, ea1, eu1, eo1, ea2, eu2, eo2
fit 1/(g(x)) "nm-steph-log" using 1:(1/($4)) via a, u, o, a1, u1, o1, a2, u2, o2

plot g(x), "nm-log" using ($1 - .5 + rand(0)):($4 - .5 + rand(0)) ps .5, eg(x), "nm-steph-log" using 1:4






a               = 42.7814   
b               = 15.339    
c               = 498.528   
d               = 0.133987  
e               = 0.194536  

f(x) = a - b * abs(atan((x - c) * d) - e)

fit f(x) "nm-log" using 1:5 via a, b, c, d, e

set yrange [10:45]
unset logscale y
set ytics (10, 20, 30, 40)

plot "nm-log" using 1:5, f(x)
